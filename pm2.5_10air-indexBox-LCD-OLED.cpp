#include <Arduino.h>
#include <Wire.h>

//#define LCD_I2C
#define OLED_I2C

#ifdef LCD_I2C
#include <LiquidCrystal_I2C.h>
#include <SPI.h>
LiquidCrystal_I2C lcd(0x27, 16, 2);
#endif

#ifdef OLED_I2C
#include <U8g2lib.h>
U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ 8);
#endif

int i;
int a[10] = {};
boolean stringComplete = false;

void setup()
{
  Serial.begin(9600);
  Serial1.begin(9600);
  delay(100);
  ///////////////////////////////////
#ifdef OLED_I2C
  u8g2.begin();
  u8g2.clearBuffer();
  //////////////////////////print_intel_logo
  const unsigned char intel_logo[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x03, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x0F, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x03, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x80, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x78, 0x00, 0x00, 0x80, 0x03, 0x00, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x80, 0x03, 0x00, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x80, 0x03, 0x00, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x80, 0x03, 0x00, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x80, 0x03, 0x00, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x02, 0x0E, 0xFE, 0x1F, 0xF8, 0x03, 0xFE, 0x80, 0x03, 0x00, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0x0E, 0xFC, 0x3F, 0xF8, 0x83, 0xFF, 0x81, 0x03, 0x80, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x80, 0x01, 0x0E, 0xFC, 0x3F, 0xF8, 0xC3, 0xE7, 0x83, 0x03, 0x80, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x80, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xC0, 0x81, 0x83, 0x03, 0x80, 0x03, 0x00, 0x00,
    0x00, 0x00, 0xC0, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xE0, 0x81, 0x87, 0x03, 0xC0, 0x03, 0x00, 0x00,
    0x00, 0x00, 0xC0, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xE0, 0x00, 0x87, 0x03, 0xC0, 0x03, 0x00, 0x00,
    0x00, 0x00, 0x60, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xE0, 0x00, 0x87, 0x03, 0xE0, 0x03, 0x00, 0x00,
    0x00, 0x00, 0x60, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xF0, 0xFF, 0x8F, 0x03, 0xE0, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x60, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xF0, 0xFF, 0x8F, 0x03, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xF0, 0x00, 0x80, 0x03, 0xF8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xF0, 0x00, 0x80, 0x03, 0x7C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xE0, 0x00, 0x80, 0x03, 0x3E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x0E, 0x1C, 0x78, 0x78, 0xE0, 0x01, 0x80, 0x83, 0x1F, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x0E, 0x1C, 0x78, 0x70, 0xC0, 0x01, 0x81, 0x83, 0x0F, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x0E, 0x1C, 0x78, 0xF0, 0xC3, 0xCF, 0x87, 0x83, 0x07, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x0C, 0x1C, 0x78, 0xE0, 0x83, 0xFF, 0x03, 0x83, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x0C, 0x1E, 0x78, 0xE0, 0x07, 0xFF, 0x01, 0x84, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xE0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xF8, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xE0, 0xFF, 0x01, 0x00, 0x00, 0xFE, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

  };
  u8g2.drawXBMP(0, 0, 128, 64, intel_logo);
  u8g2.sendBuffer();
  delay(3000);
  u8g2.clearBuffer();
  ////////////////////////print_mostfun_logo//与intel_logo同时加入setup后101无响应
  //
  //  const unsigned char mostfun_logo[] = {
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0xC4, 0x1F, 0xFC, 0x00, 0xFC, 0x03, 0xF0, 0x07, 0xFE, 0xF8, 0x1F, 0x1E, 0xE0, 0xC1, 0xE3, 0x07,
  //    0x64, 0x30, 0x82, 0x01, 0x06, 0x0C, 0x08, 0x0C, 0x10, 0xF8, 0x1F, 0x1E, 0xE0, 0xC1, 0xF3, 0x1F,
  //    0x34, 0x20, 0x01, 0x01, 0x01, 0x18, 0x04, 0x08, 0x10, 0xC0, 0x1B, 0x1E, 0xE0, 0xC1, 0xFF, 0x1F,
  //    0x1C, 0xE0, 0x00, 0x82, 0x01, 0x10, 0x04, 0x10, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x0F, 0x3E,
  //    0x0C, 0x60, 0x00, 0x82, 0x00, 0x20, 0x04, 0x00, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x07, 0x3C,
  //    0x04, 0x40, 0x00, 0x82, 0x00, 0x20, 0x04, 0x00, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x07, 0x3C,
  //    0x04, 0x40, 0x00, 0x42, 0x00, 0x60, 0x08, 0x00, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x42, 0x00, 0x60, 0x18, 0x00, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x42, 0x00, 0x60, 0xE0, 0x07, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x42, 0x00, 0x60, 0x00, 0x0E, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x42, 0x00, 0x60, 0x00, 0x18, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x42, 0x00, 0x20, 0x00, 0x10, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x82, 0x00, 0x20, 0x02, 0x10, 0x10, 0xC0, 0x03, 0x1E, 0xE0, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x82, 0x00, 0x30, 0x04, 0x10, 0x10, 0xC0, 0x03, 0x3C, 0xF0, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x02, 0x01, 0x10, 0x04, 0x10, 0x10, 0xC0, 0x03, 0x7C, 0xF0, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x02, 0x03, 0x08, 0x08, 0x10, 0x10, 0xC0, 0x03, 0xFC, 0xDF, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x02, 0x06, 0x06, 0x18, 0x0C, 0x10, 0xC0, 0x03, 0xF8, 0xC7, 0xC1, 0x03, 0x3C,
  //    0x04, 0x40, 0x00, 0x02, 0xF8, 0x01, 0xE0, 0x03, 0xE0, 0xC0, 0x03, 0xF0, 0xE3, 0xC1, 0x03, 0x3C,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  //    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  //
  //  };
  //  u8g2.drawXBMP(0, 0, 128, 64, mostfun_logo);
  //  u8g2.sendBuffer();
  //  delay(5000);
  //  u8g2.clearBuffer();
  ////////////////////////
  //////////////////////////
  u8g2.drawFrame(0, 0, 128, 64);
  u8g2.drawVLine(64, 0, 34);
  u8g2.drawHLine(0, 17, 128);
  u8g2.drawHLine(0, 34, 128);
  u8g2.setFont(u8g2_font_ncenB14_tr);
  ///////////////////////
  u8g2.drawStr(3, 16, "PM2.5");
  u8g2.drawStr(69, 16, "PM10");
  u8g2.drawStr(40,62,"ug/m^3");
  u8g2.sendBuffer();
#endif

  //////////////////////////////////
#ifdef LCD_I2C
  lcd.init();
  lcd.backlight();
  lcd.setCursor(5, 0);
  lcd.print("Boot...");
  lcd.setCursor(0, 1);
  for (int i = 0; i < 16; i++)
  {
    lcd.write(0xff);
    delay(80);
  }
  lcd.init();
  lcd.setCursor(0, 0);
  lcd.print("Air PM2.5 index");
  lcd.setCursor(10, 1);
  lcd.print("ug/m^3");

  //  lcd.setCursor(0, 1);
  //  lcd.print("PM10.0=");
  //  lcd.setCursor(7, 1);
  //  lcd.print("ug/m^3");
#endif
  ///////////////////////////////////
}

void loop() {
  while (Serial1.available() >= 10)
  {
    if (Serial1.read() == 0xAA)
    { a[0] = 0xAA;
      for (i = 1; i <= 9; i++)
      {
        a[i] = Serial1.read();
      }
      ///////////
      float pm25val = (a[3] * 256 + a[2]) / 10.0;
      float pm10val = (a[5] * 256 + a[4]) / 10.0;
      /////////////sourcevalue
      for (int c = 0; c <= 9; c++)
      {
        Serial.print(a[c], HEX);
        Serial.print(' ');
      }
      ///////////////pm2.5
      Serial.print(" PM2.5 =");
      Serial.print(pm25val);
      Serial.print("ug/m3");
      ///////////////pm10
      Serial.print(" PM10 =");
      Serial.print(pm10val);
      Serial.print("ug/m3");
      Serial.println("");
      //Serial.print(a[0],HEX);
      //Serial.println(a[1],HEX);

      ///////////////lcePrint
#ifdef LCD_I2C
      lcd.setCursor(0, 1);
      lcd.print(pm25val);
#endif

      ///////////////OLEDprint_data
#ifdef OLED_I2C
      u8g2.setFont(u8g2_font_ncenB14_tr);
      u8g2.setCursor(8, 33);
      u8g2.print(pm25val, 1);
      u8g2.sendBuffer();
      u8g2.setCursor(71, 33);
      u8g2.print(pm10val, 1);
      u8g2.sendBuffer();
      u8g2.setFont(u8g2_font_ncenB14_tr);
      ///////////////////////


#endif
    }
  }

}
